pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
		player = {x=64*8,y=220,dx=0,dy=0,anim="idle"}
		grav = -0.2
		loop = 0
		camera_x=0
		top_terrain = {{x=999,y=999}}
		update_terrain_bool = true
		clear=false
		fading=false
		fade_factor = 0
		fade_right = false
		fadeout = false
		for i=0,127 do
				for j=0,127 do
						mset(i,j,019)
				end
		end
		seed = rnd(719879)
		caves = {}
		gen_cave_chain()
end

function _update()
		if not fading then
				update_player()
		end
		camera(player.x-60,player.y-64)

		camera_x = flr(peek2(0x5f28) / 8)
		camera_y = flr(peek2(0x5f2a) / 8)
		if update_terrain_bool then
				update_terrain()
				update_terrain_bool = false
		end
		player_move_terrain()
end

function _draw()
  cls()
		if clear then
				for i=0,127 do
						for j=0,127 do
								mset(i,j,019)
						end
				end
				clear=false
		end
		
		for i = 1, #top_terrain do
    mset(top_terrain[i].x, top_terrain[i].y, 008)
		end
		map(0,0,0,0,16+camera_x+1,16+camera_y+1)
		gen_terrain()
		map(0,0,0,0,16+camera_x+1,16+camera_y+1)
		draw_caves()
		map(0,0,0,0,16+camera_x+1,16+camera_y+1)
		
		pal(5,-16)
		draw_player()
		pal()
		fade_logic()
		
		print(camera_x.." "..camera_y,camera_x*8+9,camera_y*8+9,7)
		print(#top_terrain)
		print(loop)
		print(fading)
end


-->8
--player
function update_player()
		player.anim = "idle"
		
		player.x += player.dx
		player.y += player.dy
		
		if btn(⬅️) then
				player.anim = "walk"
				player.dx = -3
		end
		if btn(➡️) then
				player.anim = "walk"
				player.dx = 3
		end
		
		if btn(⬆️) and touching then
				player.anim = "jump"	
				player.dy = -6
		end
		
		player.dy /= 1.2
		if player.dy > 5 then
				player.dy = 5
		end
		player.dy -= grav
		grav += grav/6
		if player.dy < 0 then
				grav = -0.2
		end 
		player.dx /= 1.6

		if fget(mget(flr((player.x)/8), flr((player.y+8)/8)), 0) or fget(mget(flr((player.x+8)/8), flr((player.y+8)/8)), 0) then
				player.y =	flr(player.y/8)*8
				
				grav = -0.2
				touching = true
		else
				touching = false
		end
		if fget(mget(flr((player.x)/8), flr((player.y+8)/8)), 1) or fget(mget(flr((player.x+8)/8), flr((player.y+8)/8)), 1) then
				player.y =	flr(player.y/8)*8-8
		end
		
		if fget(mget(flr((player.x-1)/8), flr((player.y)/8)), 0) or fget(mget(flr((player.x-1)/8), flr((player.y-8)/8)), 0) then
			if player.dx < 0 then
						player.dx =	0
				end
		end
		
		if fget(mget(flr((player.x+9)/8), flr((player.y)/8)), 0) or fget(mget(flr((player.x+9)/8), flr((player.y-8)/8)), 0) then
				if player.dx > 0 then
						player.dx =	0
				end
		end
		
	
end

function draw_player()
		if player.anim == "idle" then
				spr(16,player.x,player.y)
				spr(17,player.x,player.y-8)
		elseif player.anim == "walk" then
				if flr(time()*5) % 2 == 0 then
						spr(32,player.x,player.y)
				else
						spr(33,player.x,player.y)
				end
				spr(17,player.x,player.y-8)
		elseif player.anim == "jump" then
				spr(48,player.x,player.y)
				spr(17,player.x,player.y-8)
		end
		print(player.dx)
end

function player_move_terrain()
		if camera_x > 110 then
				fading = true
				fade_right = true
				loop += 127
				update_terrain()
				update_terrain_bool = true
				top_terrain = {}
		end
		if camera_x < 4 then
				fading = true
				fade_right = false
				loop -= 127
				update_terrain()
				update_terrain_bool = true
				top_terrain = {}
		end
end
-->8
--terrain

function perlin_noise(x)
		srand(x+seed)
		perlin = rnd(1) + 3 + sin(x/30)*2 + 32
		
		perlin += sin(x)+0.2*sin(5*x)+0.1*sin(10*x)+0.05*sin(20*x)+sin(0.5*x)+2*sin(0.1*x)*2+32
		return perlin/2
end

function update_terrain()
		for i=0, 127 do
				add(top_terrain, {x=i,y=perlin_noise(i+loop)})
  end
end

function gen_terrain()
		local ground = false
		local g_count = 0
		
		for i=camera_x,camera_x+16 do
				for j=camera_y,camera_y+16 do
						if ground then
								g_count += 0.75
								if g_count < 4 then
										mset(i,j,004)
								else
										if fget(mget(i,j-1),3) and not(fget(mget(i+1,j),3) or fget(mget(i-1,j),1)) then
												mset(i,j,021)
										elseif fget(mget(i,j-1),3) and fget(mget(i+1,j),3) then
												mset(i,j,022)
										elseif fget(mget(i,j-1),3) and fget(mget(i-1,j),3) then
												mset(i,j,023)
										elseif fget(mget(i-1,j),3) then
												mset(i,j,025)
										elseif fget(mget(i+1,j),3) then
												mset(i,j,026)
										else
												mset(i,j,020)
										end
								end
						end
						
						if fget(mget(i,j), 0) then
								ground = true
								if fget(mget(i+1,j), 2) and fget(mget(i-1,j), 2) then
										mset(i,j,007)
								elseif fget(mget(i+1,j), 2) and not(fget(mget(i-1,j), 2)) then
										mset(i,j,003)
								elseif not(fget(mget(i+1,j), 2)) and fget(mget(i-1,j), 2) then
										mset(i,j,002)
								else
										mset(i,j,001)
								end
						end
				end
				g_count = 0
				ground = false
		end
end

function gen_cave(cx,cy,radius)
  local radius = 4     
  for i = -radius, radius do
    for j = -radius, radius do
      if i*i + j*j <= radius*radius then
        if not(fget(mget(cx + i, cy + j),2)) then
        		mset(cx + i, cy + j, 34) -- set tile 34 in the circle
    				end
    		end
    end
  end
end

function gen_cave_chain()
		local x = 41
		local y = 32
		for i=1,10 do
				add(caves, {x=x,y=y,radius=4})
				x += rnd(4)
				y += rnd(4)
		end
end

function draw_caves()
		for i=1,#caves do
				gen_cave(caves[i].x,caves[i].y,caves[i].radius)
		end
end

-->8
--fading
local fadetable={
 {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
 {1,1,129,129,129,129,129,129,129,129,0,0,0,0,0},
 {2,2,2,130,130,130,130,130,128,128,128,128,128,0,0},
 {3,3,3,131,131,131,131,129,129,129,129,129,0,0,0},
 {4,4,132,132,132,132,132,132,130,128,128,128,128,0,0},
 {5,5,133,133,133,133,130,130,128,128,128,128,128,0,0},
 {6,6,134,13,13,13,141,5,5,5,133,130,128,128,0},
 {7,6,6,6,134,134,134,134,5,5,5,133,130,128,0},
 {8,8,136,136,136,136,132,132,132,130,128,128,128,128,0},
 {9,9,9,4,4,4,4,132,132,132,128,128,128,128,0},
 {10,10,138,138,138,4,4,4,132,132,133,128,128,128,0},
 {11,139,139,139,139,3,3,3,3,129,129,129,0,0,0},
 {12,12,12,140,140,140,140,131,131,131,1,129,129,129,0},
 {13,13,141,141,5,5,5,133,133,130,129,129,128,128,0},
 {14,14,14,134,134,141,141,2,2,133,130,130,128,128,0},
 {15,143,143,134,134,134,134,5,5,5,133,133,128,128,0}
}

function fade(i)
 for c=0,15 do
  if flr(i+1)>=16 then
   pal(c,0)
  else
   pal(c,fadetable[c+1][flr(i+1)])
  end
 end
end

function fade_logic() 
		
		if fading then
				fade(fade_factor)
				fade_factor += 1
				if fade_factor > 16 then
				  fade_factor = 20
				 	fading = false
				 	if fade_right then
				 			player.x = 12*8
				 	else
				 			player.x = 118*8
				 	end
				 	fadeout = true
				end
		end
		
		if fadeout then
				clear = true
				fade(fade_factor)
				fade_factor -= 1
				if fade_factor < 0 then
				  fade_factor = 0
				 	fading = false
				 	fadeout = false
				end
		end
end
__gfx__
00000000bbbbbbbbbbbbbbbbbbbbbbbb444444444444444444444444bbbbbbbb88cccc8800000000000000000000000000000000000000000000000000000000
00000000bbbbbbbbbbbbbbbbbbbbbbbb444444444444444444444444bbbbbbbb8cccccc800000000000000000000000000000000000000000000000000000000
007007004bbb44b4bbbb44b44bbb44bb444444444444444444444444b4b4bb4bcccccccc00000000000000000000000000000000000000000000000000000000
0007700044444444bb444444444444bb444444444444444444444444b444444bcccccccc00000000000000000000000000000000000000000000000000000000
0007700044444444bb4444444444444b44444444444444444444444444444444888c8cc800000000000000000000000000000000000000000000000000000000
0070070044444444b44444444444444b44444444444444444444444444444444c8cc888800000000000000000000000000000000000000000000000000000000
0000000044444444b44444444444444b44444444044444444444444044444444c8cc8cc800000000000000000000000000000000000000000000000000000000
0000000044444444b44444444444444b44444444004444444444440044444444c8cc8cc800000000000000000000000000000000000000000000000000000000
111111110ffffff099999999cccccccc666666664464444664444444446464444464644444666666666666460000000000000000000000000000000000000000
111111110f7ff7f099999999cccccccc666666664646466444464664464446464644464444666666666666440000000000000000000000000000000000000000
011111100ffffff099999999cccccccc666666666666666666666644646666666466664646666666666666460000000000000000000000000000000000000000
011001102f5ff5f299999999cccccccc666666666666666666666646446666664466664444666666666666440000000000000000000000000000000000000000
011001102225522299999999cccccccc666666666666666666666664466666664666664464666666666666640000000000000000000000000000000000000000
011001102222222299999999cccccccc666666666666666666666644646666666466666446666666666666460000000000000000000000000000000000000000
011001102222222299999999cccccccc666666666666666666666646466666664666666444666666666666640000000000000000000000000000000000000000
011001102222222299999999cccccccc666666666666666666666664466666664666666646666666666666640000000000000000000000000000000000000000
11111111111111115555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111111111115555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01111110011111105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110011001105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110011001105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110011001105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100000000001105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100000000001105555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0009090902020209090000000000000000000404010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000400000000000201030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002010101010300000002010404040300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004040404040400000004040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004040404040401010104040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0005040404040404040404040404040600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
